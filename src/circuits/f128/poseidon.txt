version 2.0.0;
circuit;
@type field 128;
@begin
    // Private inputs: 3 input elements
    $0 <- @private(0);
    $1 <- @private(0);
    $2 <- @private(0);

    // Initialize state with input elements using @add with zero
    // State size: 3 elements (t=3)
    $3 <- @add(0: $0, @private(0));  // Add zero to copy input
    $4 <- @add(0: $1, @private(0));  // Add zero to copy input
    $5 <- @add(0: $2, @private(0));  // Add zero to copy input

    // Round constants for the first round
    $6 <- @private(0);  // Round constant 0
    $7 <- @private(0);  // Round constant 1
    $8 <- @private(0);  // Round constant 2

    // Add round constants (ARK - Add Round Key)
    $9 <- @add(0: $3, $6);
    $10 <- @add(0: $4, $7);
    $11 <- @add(0: $5, $8);

    // ===== FULL ROUNDS (first set) =====
    // For F_128, we'll use 3 full rounds at the beginning

    // Full Round 1
    // S-box layer (x^3 in F_128)
    $12 <- @mul(0: $9, $9);     // x^2
    $13 <- @mul(0: $12, $9);    // x^3 for first state element
    
    $14 <- @mul(0: $10, $10);   // x^2
    $15 <- @mul(0: $14, $10);   // x^3 for second state element
    
    $16 <- @mul(0: $11, $11);   // x^2
    $17 <- @mul(0: $16, $11);   // x^3 for third state element

    // MDS matrix multiplication (linear layer)
    // Using a simple MDS matrix for F_128
    // [ 2 1 1 ]
    // [ 1 2 1 ]
    // [ 1 1 2 ]
    
    // First row: 2*s0 + 1*s1 + 1*s2
    $18 <- @mul(0: $13, @private(0));  // 2*s0
    $19 <- @add(0: $18, $15);          // 2*s0 + s1
    $20 <- @add(0: $19, $17);          // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $21 <- @mul(0: $15, @private(0));  // 2*s1
    $22 <- @add(0: $13, $21);          // s0 + 2*s1
    $23 <- @add(0: $22, $17);          // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $24 <- @mul(0: $17, @private(0));  // 2*s2
    $25 <- @add(0: $13, $15);          // s0 + s1
    $26 <- @add(0: $25, $24);          // s0 + s1 + 2*s2

    // Round constants for the next round
    $27 <- @private(0);  // Round constant 3
    $28 <- @private(0);  // Round constant 4
    $29 <- @private(0);  // Round constant 5

    // Add round constants
    $30 <- @add(0: $20, $27);
    $31 <- @add(0: $23, $28);
    $32 <- @add(0: $26, $29);

    // Full Round 2
    // S-box layer (x^3 in F_128)
    $33 <- @mul(0: $30, $30);    // x^2
    $34 <- @mul(0: $33, $30);    // x^3 for first state element
    
    $35 <- @mul(0: $31, $31);    // x^2
    $36 <- @mul(0: $35, $31);    // x^3 for second state element
    
    $37 <- @mul(0: $32, $32);    // x^2
    $38 <- @mul(0: $37, $32);    // x^3 for third state element

    // MDS matrix multiplication (same as before)
    // First row: 2*s0 + 1*s1 + 1*s2
    $39 <- @mul(0: $34, @private(0));  // 2*s0
    $40 <- @add(0: $39, $36);          // 2*s0 + s1
    $41 <- @add(0: $40, $38);          // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $42 <- @mul(0: $36, @private(0));  // 2*s1
    $43 <- @add(0: $34, $42);          // s0 + 2*s1
    $44 <- @add(0: $43, $38);          // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $45 <- @mul(0: $38, @private(0));  // 2*s2
    $46 <- @add(0: $34, $36);          // s0 + s1
    $47 <- @add(0: $46, $45);          // s0 + s1 + 2*s2

    // Round constants for the next round
    $48 <- @private(0);  // Round constant 6
    $49 <- @private(0);  // Round constant 7
    $50 <- @private(0);  // Round constant 8

    // Add round constants
    $51 <- @add(0: $41, $48);
    $52 <- @add(0: $44, $49);
    $53 <- @add(0: $47, $50);

    // Full Round 3
    // S-box layer (x^3 in F_128)
    $54 <- @mul(0: $51, $51);    // x^2
    $55 <- @mul(0: $54, $51);    // x^3 for first state element
    
    $56 <- @mul(0: $52, $52);    // x^2
    $57 <- @mul(0: $56, $52);    // x^3 for second state element
    
    $58 <- @mul(0: $53, $53);    // x^2
    $59 <- @mul(0: $58, $53);    // x^3 for third state element

    // MDS matrix multiplication (same as before)
    // First row: 2*s0 + 1*s1 + 1*s2
    $60 <- @mul(0: $55, @private(0));  // 2*s0
    $61 <- @add(0: $60, $57);          // 2*s0 + s1
    $62 <- @add(0: $61, $59);          // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $63 <- @mul(0: $57, @private(0));  // 2*s1
    $64 <- @add(0: $55, $63);          // s0 + 2*s1
    $65 <- @add(0: $64, $59);          // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $66 <- @mul(0: $59, @private(0));  // 2*s2
    $67 <- @add(0: $55, $57);          // s0 + s1
    $68 <- @add(0: $67, $66);          // s0 + s1 + 2*s2

    // Round constants for the partial rounds
    $69 <- @private(0);  // Round constant 9
    $70 <- @private(0);  // Round constant 10
    $71 <- @private(0);  // Round constant 11

    // Add round constants
    $72 <- @add(0: $62, $69);
    $73 <- @add(0: $65, $70);
    $74 <- @add(0: $68, $71);

    // ===== PARTIAL ROUNDS =====
    // For F_128, we'll use 4 partial rounds

    // Partial Round 1
    // S-box layer (x^3) applied only to the first element
    $75 <- @mul(0: $72, $72);   // x^2
    $76 <- @mul(0: $75, $72);   // x^3 for first state element only
    
    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $77 <- @mul(0: $76, @private(0));  // 2*s0
    $78 <- @add(0: $77, $73);          // 2*s0 + s1
    $79 <- @add(0: $78, $74);          // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $80 <- @mul(0: $73, @private(0));  // 2*s1
    $81 <- @add(0: $76, $80);          // s0 + 2*s1
    $82 <- @add(0: $81, $74);          // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $83 <- @mul(0: $74, @private(0));  // 2*s2
    $84 <- @add(0: $76, $73);          // s0 + s1
    $85 <- @add(0: $84, $83);          // s0 + s1 + 2*s2

    // Round constants for the next round
    $86 <- @private(0);  // Round constant 12
    $87 <- @private(0);  // Round constant 13
    $88 <- @private(0);  // Round constant 14

    // Add round constants
    $89 <- @add(0: $79, $86);
    $90 <- @add(0: $82, $87);
    $91 <- @add(0: $85, $88);

    // Partial Round 2
    // S-box layer (x^3) applied only to the first element
    $92 <- @mul(0: $89, $89);   // x^2
    $93 <- @mul(0: $92, $89);   // x^3 for first state element only
    
    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $94 <- @mul(0: $93, @private(0));  // 2*s0
    $95 <- @add(0: $94, $90);          // 2*s0 + s1
    $96 <- @add(0: $95, $91);          // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $97 <- @mul(0: $90, @private(0));  // 2*s1
    $98 <- @add(0: $93, $97);          // s0 + 2*s1
    $99 <- @add(0: $98, $91);          // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $100 <- @mul(0: $91, @private(0));  // 2*s2
    $101 <- @add(0: $93, $90);          // s0 + s1
    $102 <- @add(0: $101, $100);        // s0 + s1 + 2*s2

    // Round constants for the next round
    $103 <- @private(0);  // Round constant 15
    $104 <- @private(0);  // Round constant 16
    $105 <- @private(0);  // Round constant 17

    // Add round constants
    $106 <- @add(0: $96, $103);
    $107 <- @add(0: $99, $104);
    $108 <- @add(0: $102, $105);

    // Partial Round 3
    // S-box layer (x^3) applied only to the first element
    $109 <- @mul(0: $106, $106);   // x^2
    $110 <- @mul(0: $109, $106);   // x^3 for first state element only
    
    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $111 <- @mul(0: $110, @private(0));  // 2*s0
    $112 <- @add(0: $111, $107);         // 2*s0 + s1
    $113 <- @add(0: $112, $108);         // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $114 <- @mul(0: $107, @private(0));  // 2*s1
    $115 <- @add(0: $110, $114);         // s0 + 2*s1
    $116 <- @add(0: $115, $108);         // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $117 <- @mul(0: $108, @private(0));  // 2*s2
    $118 <- @add(0: $110, $107);         // s0 + s1
    $119 <- @add(0: $118, $117);         // s0 + s1 + 2*s2

    // Round constants for the next round
    $120 <- @private(0);  // Round constant 18
    $121 <- @private(0);  // Round constant 19
    $122 <- @private(0);  // Round constant 20

    // Add round constants
    $123 <- @add(0: $113, $120);
    $124 <- @add(0: $116, $121);
    $125 <- @add(0: $119, $122);

    // Partial Round 4
    // S-box layer (x^3) applied only to the first element
    $126 <- @mul(0: $123, $123);   // x^2
    $127 <- @mul(0: $126, $123);   // x^3 for first state element only
    
    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $128 <- @mul(0: $127, @private(0));  // 2*s0
    $129 <- @add(0: $128, $124);         // 2*s0 + s1
    $130 <- @add(0: $129, $125);         // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $131 <- @mul(0: $124, @private(0));  // 2*s1
    $132 <- @add(0: $127, $131);         // s0 + 2*s1
    $133 <- @add(0: $132, $125);         // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $134 <- @mul(0: $125, @private(0));  // 2*s2
    $135 <- @add(0: $127, $124);         // s0 + s1
    $136 <- @add(0: $135, $134);         // s0 + s1 + 2*s2

    // Round constants for the final rounds
    $137 <- @private(0);  // Round constant 21
    $138 <- @private(0);  // Round constant 22
    $139 <- @private(0);  // Round constant 23

    // Add round constants
    $140 <- @add(0: $130, $137);
    $141 <- @add(0: $133, $138);
    $142 <- @add(0: $136, $139);

    // ===== FULL ROUNDS (final set) =====
    // For F_128, we'll use 3 full rounds at the end

    // Full Round 1 (of final set)
    // S-box layer (x^3 in F_128)
    $143 <- @mul(0: $140, $140);   // x^2
    $144 <- @mul(0: $143, $140);   // x^3 for first state element
    
    $145 <- @mul(0: $141, $141);   // x^2
    $146 <- @mul(0: $145, $141);   // x^3 for second state element
    
    $147 <- @mul(0: $142, $142);   // x^2
    $148 <- @mul(0: $147, $142);   // x^3 for third state element

    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $149 <- @mul(0: $144, @private(0));  // 2*s0
    $150 <- @add(0: $149, $146);         // 2*s0 + s1
    $151 <- @add(0: $150, $148);         // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $152 <- @mul(0: $146, @private(0));  // 2*s1
    $153 <- @add(0: $144, $152);         // s0 + 2*s1
    $154 <- @add(0: $153, $148);         // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $155 <- @mul(0: $148, @private(0));  // 2*s2
    $156 <- @add(0: $144, $146);         // s0 + s1
    $157 <- @add(0: $156, $155);         // s0 + s1 + 2*s2

    // Round constants for the next round
    $158 <- @private(0);  // Round constant 24
    $159 <- @private(0);  // Round constant 25
    $160 <- @private(0);  // Round constant 26

    // Add round constants
    $161 <- @add(0: $151, $158);
    $162 <- @add(0: $154, $159);
    $163 <- @add(0: $157, $160);

    // Full Round 2 (of final set)
    // S-box layer (x^3 in F_128)
    $164 <- @mul(0: $161, $161);   // x^2
    $165 <- @mul(0: $164, $161);   // x^3 for first state element
    
    $166 <- @mul(0: $162, $162);   // x^2
    $167 <- @mul(0: $166, $162);   // x^3 for second state element
    
    $168 <- @mul(0: $163, $163);   // x^2
    $169 <- @mul(0: $168, $163);   // x^3 for third state element

    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $170 <- @mul(0: $165, @private(0));  // 2*s0
    $171 <- @add(0: $170, $167);         // 2*s0 + s1
    $172 <- @add(0: $171, $169);         // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $173 <- @mul(0: $167, @private(0));  // 2*s1
    $174 <- @add(0: $165, $173);         // s0 + 2*s1
    $175 <- @add(0: $174, $169);         // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $176 <- @mul(0: $169, @private(0));  // 2*s2
    $177 <- @add(0: $165, $167);         // s0 + s1
    $178 <- @add(0: $177, $176);         // s0 + s1 + 2*s2

    // Round constants for the next round
    $179 <- @private(0);  // Round constant 27
    $180 <- @private(0);  // Round constant 28
    $181 <- @private(0);  // Round constant 29

    // Add round constants
    $182 <- @add(0: $172, $179);
    $183 <- @add(0: $175, $180);
    $184 <- @add(0: $178, $181);

    // Full Round 3 (of final set)
    // S-box layer (x^3 in F_128)
    $185 <- @mul(0: $182, $182);   // x^2
    $186 <- @mul(0: $185, $182);   // x^3 for first state element
    
    $187 <- @mul(0: $183, $183);   // x^2
    $188 <- @mul(0: $187, $183);   // x^3 for second state element
    
    $189 <- @mul(0: $184, $184);   // x^2
    $190 <- @mul(0: $189, $184);   // x^3 for third state element

    // MDS matrix multiplication
    // First row: 2*s0 + 1*s1 + 1*s2
    $191 <- @mul(0: $186, @private(0));  // 2*s0
    $192 <- @add(0: $191, $188);         // 2*s0 + s1
    $193 <- @add(0: $192, $190);         // 2*s0 + s1 + s2
    
    // Second row: 1*s0 + 2*s1 + 1*s2
    $194 <- @mul(0: $188, @private(0));  // 2*s1
    $195 <- @add(0: $186, $194);         // s0 + 2*s1
    $196 <- @add(0: $195, $190);         // s0 + 2*s1 + s2
    
    // Third row: 1*s0 + 1*s1 + 2*s2
    $197 <- @mul(0: $190, @private(0));  // 2*s2
    $198 <- @add(0: $186, $188);         // s0 + s1
    $199 <- @add(0: $198, $197);         // s0 + s1 + 2*s2

    // Output the first element of the state as the hash result
    // Replace direct copy with add zero
    $200 <- @add(0: $193, @private(0));  // Add zero to copy the output
@end
